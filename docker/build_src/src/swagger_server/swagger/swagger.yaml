openapi: 3.0.0
info:
  title: Weather Watch
  description: Weather Watch API
  version: 1.0.0
servers:
- url: /
paths:
  /v1/currentAirQualityIndex:
    get:
      tags:
      - v1_aqi
      summary: List the current air quality index of a location
      description: API used to get the list of Current Air Quality Index Information
        for India
      operationId: list_current_air_quality_index
      parameters:
      - name: pincode
        in: query
        description: "If pincode query attribute provided, response will contain the\
          \ AQI record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: "If state query attribute provided, response will contain the\
          \ AQI record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: district
        in: query
        description: "If district query attribute provided, response will contain\
          \ the AQI record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageRef
        in: query
        description: Pagination Reference Index
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "It display the list from the startFrom value till th value provided\
          \ in\nthe limit attribute. If limit is not provided it will provide till\
          \ default \nvalue which is 100."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: order
        in: query
        description: |-
          The response order will be based on the value passed.
          ascending(0) or descending(1)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: sortBy
        in: query
        description: |-
          The response would be sorted based on one of the attribute passed.
          Attributes are : eventTime, state or district.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of Current Weather AQI Information.
          headers:
            x-next:
              description: Link to the next page of response
              style: simple
              explode: false
              schema:
                type: string
            x-total-count:
              description: Total number of records found for request.
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1AirQualityIndex'
                x-content-type: application/json
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Error'
      x-openapi-router-controller: swagger_server.controllers.v1_aqi_controller
  /v1/currentWeather:
    get:
      tags:
      - v1_weather
      summary: List the current weather
      description: API used to get the list of Current Weather Information for India
      operationId: list_current_weather
      parameters:
      - name: pincode
        in: query
        description: "If pincode query attribute provided, response will contain the\
          \ weather record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: "If state query attribute provided, response will contain the\
          \ weather record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: district
        in: query
        description: "If district query attribute provided, response will contain\
          \ the weather record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageRef
        in: query
        description: Pagination Reference Index
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "It display the list from the startFrom value till th value provided\
          \ in\nthe limit attribute. If limit is not provided it will provide till\
          \ default \nvalue which is 100."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: order
        in: query
        description: |-
          The response order will be based on the value passed.
          ascending(0) or descending(1)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: sortBy
        in: query
        description: |-
          The response would be sorted based on one of the attribute passed.
          Attributes are : eventTime, state or district.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of Current Weather Information.
          headers:
            x-next:
              description: Link to the next page of response
              style: simple
              explode: false
              schema:
                type: string
            x-total-count:
              description: Total number of records found for request.
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1CurrentWeather'
                x-content-type: application/json
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Error'
      x-openapi-router-controller: swagger_server.controllers.v1_weather_controller
  /v1/geo-locations:
    get:
      tags:
      - v1_geo_locations
      summary: List all the Geo Location supported by Weather Watch application
      description: "API used to get the list of Geo Location Information supported\
        \ \nby Weather Watch application"
      operationId: list_geo_locations
      parameters:
      - name: pincode
        in: query
        description: "If pincode query attribute provided, response will contain the\
          \ record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: "If state query attribute provided, response will contain the\
          \ record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: district
        in: query
        description: "If district query attribute provided, response will contain\
          \ the record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "It display the list from the startFrom value till th value provided\
          \ in\nthe limit attribute. If limit is not provided it will provide till\
          \ default \nvalue which is 100."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      responses:
        "200":
          description: List of Geo Location.
          headers:
            x-next:
              description: Link to the next page of response
              style: simple
              explode: false
              schema:
                type: string
            x-total-count:
              description: Total number of records found for request.
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1GeoLocation'
                x-content-type: application/json
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Error'
      x-openapi-router-controller: swagger_server.controllers.v1_geo_locations_controller
  /v1/historyWeather:
    get:
      tags:
      - v1_weather
      summary: List the historical weather Information
      description: API used to get the list of historical Weather Information for
        India
      operationId: list_history_weather
      parameters:
      - name: pincode
        in: query
        description: "If pincode query attribute provided, response will contain the\
          \ weather record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: state
        in: query
        description: "If state query attribute provided, response will contain the\
          \ weather record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: district
        in: query
        description: "If district query attribute provided, response will contain\
          \ the weather record \nfor that Geo Location."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startTime
        in: query
        description: |-
          Timestamp in epoch format. Filters the weather record that occurred between
          start time and end time, inclusive of end time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endTime
        in: query
        description: |-
          Timestamp in epoch format. Filters the weather record that occurred between
          start time and end time, inclusive of end time.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: pageRef
        in: query
        description: Pagination Reference Index
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: "It display the list from the startFrom value till th value provided\
          \ in\nthe limit attribute. If limit is not provided it will provide till\
          \ default \nvalue which is 100."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 100
      - name: order
        in: query
        description: |-
          The response order will be based on the value passed.
          ascending(0) or descending(1)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: sortBy
        in: query
        description: |-
          The response would be sorted based on one of the attribute passed.
          Attributes are : eventTime, state or district.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: List of historical Weather Information.
          headers:
            x-next:
              description: Link to the next page of response
              style: simple
              explode: false
              schema:
                type: string
            x-total-count:
              description: Total number of records found for request.
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/V1CurrentWeather'
                x-content-type: application/json
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V1Error'
      x-openapi-router-controller: swagger_server.controllers.v1_weather_controller
  /v1/user/login:
    get:
      tags:
      - v1_user
      summary: Logs user into the system
      description: ""
      operationId: login_user
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          headers:
            X-Expires-After:
              description: date in UTC when token expires
              style: simple
              explode: false
              schema:
                type: string
                format: date-time
            X-Rate-Limit:
              description: calls per hour allowed by the user
              style: simple
              explode: false
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
            application/xml:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
      x-openapi-router-controller: swagger_server.controllers.v1_user_controller
  /v1/user/logout:
    get:
      tags:
      - v1_user
      summary: Logs out current logged in user session
      description: ""
      operationId: logout_user
      parameters: []
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.v1_user_controller
  /v1/user/{username}:
    get:
      tags:
      - v1_user
      summary: Get user by user name
      description: ""
      operationId: get_user_by_name
      parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.v1_user_controller
    put:
      tags:
      - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: update_user
      parameters:
      - name: username
        in: path
        description: name that need to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: delete_user
      parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "400":
          description: Invalid username supplied
        "404":
          description: User not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /v1/users:
    post:
      tags:
      - v1_users
      summary: Create User
      description: This can only be done by the logged in user.
      operationId: create_user
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-openapi-router-controller: swagger_server.controllers.v1_users_controller
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          example: john@email.com
        firstName:
          type: string
          example: John
        id:
          type: integer
          format: int64
          example: 10
        lastName:
          type: string
          example: James
        password:
          type: string
          example: "12345"
        phone:
          type: string
          example: "12345"
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
        username:
          type: string
          example: theUser
      example:
        firstName: John
        lastName: James
        password: "12345"
        userStatus: 1
        phone: "12345"
        id: 10
        email: john@email.com
        username: theUser
    V1AirQualityIndex:
      required:
      - aqi
      - components
      - dt
      - epochTime
      - eventTime
      - location
      type: object
      properties:
        aqi:
          type: integer
        components:
          $ref: '#/components/schemas/V1AirQualityIndex_components'
        dt:
          type: integer
        epochTime:
          type: integer
        eventTime:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/V1AirQualityIndex_location'
      example:
        dt: 2
        components:
          No2: 5.637377
          O3: 2.302136
          So2: 7.0614014
          pm2_5: 3.6160767
          Nh3: 1.4658129
          pm10: 9.301444
          NitricOxide: 5.962134
          Co: 6.0274563
        aqi: 0
        eventTime: 2000-01-23T04:56:07.000+00:00
        location:
          pincode: 1
          countryCode: countryCode
          district: district
          taluka: taluka
          postOfficeName: postOfficeName
          lon: 1.2315135
          state: state
          lat: 7.386282
        epochTime: 4
    V1CurrentWeather:
      required:
      - description
      - dt
      - epochTime
      - eventTime
      - location
      - timezone
      - weather
      - weatherCode
      - wind
      type: object
      properties:
        description:
          type: string
        dt:
          type: integer
        epochTime:
          type: integer
        eventTime:
          type: string
          format: date-time
        location:
          $ref: '#/components/schemas/V1AirQualityIndex_location'
        timezone:
          type: integer
        weather:
          $ref: '#/components/schemas/V1CurrentWeather_weather'
        weatherCode:
          type: integer
        wind:
          $ref: '#/components/schemas/V1CurrentWeather_wind'
      example:
        dt: 0
        timezone: 1
        weatherCode: 7
        eventTime: 2000-01-23T04:56:07.000+00:00
        weather:
          grnd_level: 5
          temp: 3.6160767
          temp_min: 4.145608
          humidity: 2
          pressure: 7
          sea_level: 9
          feels_like: 5.962134
          temp_max: 2.027123
        description: description
        location:
          pincode: 1
          countryCode: countryCode
          district: district
          taluka: taluka
          postOfficeName: postOfficeName
          lon: 1.2315135
          state: state
          lat: 7.386282
        epochTime: 6
        wind:
          deg: 1
          speed: 1.4894159
          gust: 1.0246457
    V1Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    V1GeoLocation:
      required:
      - countryCode
      - district
      - lat
      - lon
      - pincode
      - postOfficeName
      - state
      - taluka
      type: object
      properties:
        countryCode:
          type: string
        district:
          type: string
        lat:
          type: number
          format: float
        lon:
          type: number
          format: float
        pincode:
          type: integer
          format: int32
        postOfficeName:
          type: string
        state:
          type: string
        taluka:
          type: string
      example:
        pincode: 1
        countryCode: countryCode
        district: district
        taluka: taluka
        postOfficeName: postOfficeName
        lon: 6.0274563
        state: state
        lat: 0.8008282
    V1AirQualityIndex_components:
      required:
      - Co
      - Nh3
      - NitricOxide
      - No2
      - O3
      - So2
      - pm10
      - pm2_5
      type: object
      properties:
        Co:
          type: number
          format: float
        Nh3:
          type: number
          format: float
        NitricOxide:
          type: number
          format: float
        No2:
          type: number
          format: float
        O3:
          type: number
          format: float
        So2:
          type: number
          format: float
        pm10:
          type: number
          format: float
        pm2_5:
          type: number
          format: float
      example:
        No2: 5.637377
        O3: 2.302136
        So2: 7.0614014
        pm2_5: 3.6160767
        Nh3: 1.4658129
        pm10: 9.301444
        NitricOxide: 5.962134
        Co: 6.0274563
    V1AirQualityIndex_location:
      required:
      - countryCode
      - district
      - lat
      - lon
      - pincode
      - postOfficeName
      - state
      - taluka
      type: object
      properties:
        countryCode:
          type: string
        district:
          type: string
        lat:
          type: number
          format: float
        lon:
          type: number
          format: float
        pincode:
          type: integer
        postOfficeName:
          type: string
        state:
          type: string
        taluka:
          type: string
      example:
        pincode: 1
        countryCode: countryCode
        district: district
        taluka: taluka
        postOfficeName: postOfficeName
        lon: 1.2315135
        state: state
        lat: 7.386282
    V1CurrentWeather_weather:
      required:
      - feels_like
      - grnd_level
      - humidity
      - pressure
      - sea_level
      - temp
      - temp_max
      - temp_min
      type: object
      properties:
        feels_like:
          type: number
          format: float
        grnd_level:
          type: integer
        humidity:
          type: integer
        pressure:
          type: integer
        sea_level:
          type: integer
        temp:
          type: number
          format: float
        temp_max:
          type: number
          format: float
        temp_min:
          type: number
          format: float
      example:
        grnd_level: 5
        temp: 3.6160767
        temp_min: 4.145608
        humidity: 2
        pressure: 7
        sea_level: 9
        feels_like: 5.962134
        temp_max: 2.027123
    V1CurrentWeather_wind:
      required:
      - deg
      - gust
      - speed
      type: object
      properties:
        deg:
          type: integer
        gust:
          type: number
          format: float
        speed:
          type: number
          format: float
      example:
        deg: 1
        speed: 1.4894159
        gust: 1.0246457

